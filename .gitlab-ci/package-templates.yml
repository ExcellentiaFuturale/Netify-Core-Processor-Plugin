# Source package
#---------------

.pkg_source:
  stage: package
  image: $OS_IMAGE

  before_script:
    - apt update
    - env DEBIAN_FRONTEND=noninteractive apt install -y git

  script:
    # Build environment
    - env DEBIAN_FRONTEND=noninteractive apt install -y rsync debhelper autoconf automake bc build-essential libmnl-dev libnetfilter-conntrack-dev libtool wget pkg-config libcurl4-openssl-dev
    - wget --no-check-certificate https://download.netify.ai/netify/$OS_NAME/$OS_VERSION-devel/$OS_ARCH/netifyd_${NETIFY_MINVER}_${OS_ARCH}.deb
    - wget --no-check-certificate https://download.netify.ai/netify/$OS_NAME/$OS_VERSION-devel/$OS_ARCH/netifyd-dev_${NETIFY_MINVER}_${OS_ARCH}.deb
    - env DEBIAN_FRONTEND=noninteractive apt install -y ./netifyd_${NETIFY_MINVER}_${OS_ARCH}.deb ./netifyd-dev_${NETIFY_MINVER}_${OS_ARCH}.deb

    # Build packages
    - ./autogen.sh
    - ./configure --prefix=/usr --includedir=\${prefix}/include --mandir=\${prefix}/share/man --sysconfdir=/etc --localstatedir=/var
    - make dist-git

    # Copy packages to mirror
    - mkdir -p builds/netify/source/
    - mv -v *.tar.gz *.sum *.distinfo builds/netify/source/

    # Push build to master node (only if tagged)
    - if [ -n "$CI_COMMIT_TAG" ]; then rsync -rtv builds/* master-mirror.netify-backend.gcp::netify/; fi

  artifacts:
    when: always
    paths:
    - builds
    expire_in: 1 day
